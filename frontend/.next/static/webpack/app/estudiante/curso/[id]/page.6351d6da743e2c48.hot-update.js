"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/estudiante/curso/[id]/page",{

/***/ "(app-pages-browser)/./hooks/useYouTube.ts":
/*!*****************************!*\
  !*** ./hooks/useYouTube.ts ***!
  \*****************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useYouTube: () => (/* binding */ useYouTube)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n// hooks/useYouTube.ts\n\nfunction ensureApiLoaded() {\n    return new Promise((resolve)=>{\n        // Ya cargada\n        if (window.YT && window.YT.Player) return resolve();\n        // ¿script ya insertado?\n        const existing = document.querySelector('script[src*=\"youtube.com/iframe_api\"]');\n        if (existing) {\n            // Espera a que se inicialice\n            const check = ()=>window.YT && window.YT.Player ? resolve() : setTimeout(check, 50);\n            check();\n            return;\n        }\n        // Inserta script\n        const tag = document.createElement('script');\n        tag.src = 'https://www.youtube.com/iframe_api';\n        document.head.appendChild(tag);\n        window.onYouTubeIframeAPIReady = ()=>resolve();\n    });\n}\nfunction useYouTube(iframeId) {\n    const playerRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const [ready, setReady] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)({\n        \"useYouTube.useEffect\": ()=>{\n            let cancelled = false;\n            ({\n                \"useYouTube.useEffect\": async ()=>{\n                    await ensureApiLoaded();\n                    if (cancelled) return;\n                    const el = document.getElementById(iframeId);\n                    // No crees el player si el iframe no existe o aún no tiene src\n                    if (!el || !el.src) return;\n                    // Evita crear dos veces\n                    if (playerRef.current) return;\n                    try {\n                        // @ts-ignore\n                        const p = new window.YT.Player(iframeId, {\n                            events: {\n                                onReady: {\n                                    \"useYouTube.useEffect\": ()=>{\n                                        if (!cancelled) setReady(true);\n                                    }\n                                }[\"useYouTube.useEffect\"]\n                            }\n                        });\n                        playerRef.current = p;\n                    } catch (e) {\n                        // Si falla la construcción, no rompas la app\n                        playerRef.current = null;\n                    }\n                }\n            })[\"useYouTube.useEffect\"]();\n            return ({\n                \"useYouTube.useEffect\": ()=>{\n                    cancelled = true;\n                    const p = playerRef.current;\n                    // Destruye con seguridad\n                    try {\n                        var _p_destroy;\n                        p === null || p === void 0 ? void 0 : (_p_destroy = p.destroy) === null || _p_destroy === void 0 ? void 0 : _p_destroy.call(p);\n                    } catch (e) {}\n                    playerRef.current = null;\n                    setReady(false);\n                }\n            })[\"useYouTube.useEffect\"];\n        }\n    }[\"useYouTube.useEffect\"], [\n        iframeId\n    ]);\n    const play = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useYouTube.useCallback[play]\": ()=>{\n            var _playerRef_current_playVideo, _playerRef_current;\n            return (_playerRef_current = playerRef.current) === null || _playerRef_current === void 0 ? void 0 : (_playerRef_current_playVideo = _playerRef_current.playVideo) === null || _playerRef_current_playVideo === void 0 ? void 0 : _playerRef_current_playVideo.call(_playerRef_current);\n        }\n    }[\"useYouTube.useCallback[play]\"], []);\n    const pause = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useYouTube.useCallback[pause]\": ()=>{\n            var _playerRef_current_pauseVideo, _playerRef_current;\n            return (_playerRef_current = playerRef.current) === null || _playerRef_current === void 0 ? void 0 : (_playerRef_current_pauseVideo = _playerRef_current.pauseVideo) === null || _playerRef_current_pauseVideo === void 0 ? void 0 : _playerRef_current_pauseVideo.call(_playerRef_current);\n        }\n    }[\"useYouTube.useCallback[pause]\"], []);\n    const getDuration = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useYouTube.useCallback[getDuration]\": ()=>{\n            var _playerRef_current_getDuration, _playerRef_current;\n            var _playerRef_current_getDuration1;\n            return (_playerRef_current_getDuration1 = (_playerRef_current = playerRef.current) === null || _playerRef_current === void 0 ? void 0 : (_playerRef_current_getDuration = _playerRef_current.getDuration) === null || _playerRef_current_getDuration === void 0 ? void 0 : _playerRef_current_getDuration.call(_playerRef_current)) !== null && _playerRef_current_getDuration1 !== void 0 ? _playerRef_current_getDuration1 : 0;\n        }\n    }[\"useYouTube.useCallback[getDuration]\"], []);\n    const addOnStateChange = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)({\n        \"useYouTube.useCallback[addOnStateChange]\": (handler)=>{\n            const p = playerRef.current;\n            if (!p || typeof p.addEventListener !== 'function') {\n                // player no listo; devuelve un \"off\" vacío\n                return ({\n                    \"useYouTube.useCallback[addOnStateChange]\": ()=>{}\n                })[\"useYouTube.useCallback[addOnStateChange]\"];\n            }\n            // YT emite 'onStateChange'\n            // @ts-ignore\n            p.addEventListener('onStateChange', handler);\n            return ({\n                \"useYouTube.useCallback[addOnStateChange]\": ()=>{\n                    const cur = playerRef.current;\n                    try {\n                        var // @ts-ignore\n                        _cur_removeEventListener;\n                        cur === null || cur === void 0 ? void 0 : (_cur_removeEventListener = cur.removeEventListener) === null || _cur_removeEventListener === void 0 ? void 0 : _cur_removeEventListener.call(cur, 'onStateChange', handler);\n                    } catch (e) {}\n                }\n            })[\"useYouTube.useCallback[addOnStateChange]\"];\n        }\n    }[\"useYouTube.useCallback[addOnStateChange]\"], []);\n    return {\n        ready,\n        play,\n        pause,\n        getDuration,\n        addOnStateChange\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useYouTube.ts\n"));

/***/ })

});